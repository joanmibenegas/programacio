package buscaminas;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Color;
import java.nio.file.Paths;
import java.util.ArrayList;
import javax.swing.ImageIcon;

public class Finestra extends javax.swing.JFrame implements ActionListener {
    int numerofiles = 0;
    int numerocols = 0;
    Cuadro[][] cuadro = null;
    ImageIcon[] arrayNumeros = new ImageIcon[8];
    ArrayList<Cuadro> check = new ArrayList<>();
    int[][] direccions = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1}};
    String currentPath = Paths.get("").toAbsolutePath().toString();
    Partida p = null;
    
    public Finestra() {
        initComponents();
    }

    //Accions, click als botons
    public void actionPerformed(ActionEvent e) {
        clickBoto(e);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        files = new javax.swing.JTextField();
        cols = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        pantalla_joc = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Files:");

        jLabel2.setText("Columnes");

        files.setText("10");

        cols.setText("10");

        jButton1.setText("Start");
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(files, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(cols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 465, Short.MAX_VALUE)
                                                .addComponent(jButton1)
                                                .addGap(52, 52, 52))))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(files, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(cols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton1)))
                                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pantalla_jocLayout = new javax.swing.GroupLayout(pantalla_joc);
        pantalla_joc.setLayout(pantalla_jocLayout);
        pantalla_jocLayout.setHorizontalGroup(
                pantalla_jocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );
        pantalla_jocLayout.setVerticalGroup(
                pantalla_jocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 314, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pantalla_joc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pantalla_joc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        iniciar();
        this.paintAll(this.getGraphics());
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Finestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Finestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Finestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Finestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Finestra f = new Finestra();
                f.setVisible(true);
            }
        });
    }

    //Metode inici
    private void iniciar() {
        p = new Partida();
        //Configurar Layout Inicio
        configInicial();
        //Establir foto dels numeros
        establecerFotoNumeros();
        //Crear array de cuadros i els botons
        crearBotonsArray();
        //Comprovar el minim de mines
        p.asignarMines();
        //Comprovar el voltant
        p.asignarMinesProximes();
    }



    //Config Inicial
    private void configInicial() {
        this.pantalla_joc.removeAll();//Borrar tot el tauler
        //Obtenir el numero de files i columnes i declararles com atribut
        numerofiles = Integer.parseInt(this.files.getText());
        numerocols = Integer.parseInt(this.cols.getText());
        //Crear el layout
        this.pantalla_joc.setLayout(new java.awt.GridLayout(numerofiles, numerocols));
    }
    /////////////////////////
    //Crear array i botons///
    /////////////////////////
    private void crearBotonsArray() {
        
        cuadro = p.crearBotonsArray(numerofiles,numerocols);
        configCuadro();
    }

    public void configCuadro() {
        for (int i = 0; i < cuadro.length; i++) {
            for (int j = 0; j < cuadro.length; j++) {
                cuadro[i][j].addActionListener(this);
                cuadro[i][j].setVisible(true);
                this.pantalla_joc.add(cuadro[i][j]);
            }
            
        }
    }

//////////////////////////////////////////////////////

    private void comprovarDireccio(int[] dirs, int f, int c, int i) {
        int dfila = (f + dirs[0]);
        int dcolumn = (c + dirs[1]);
        boolean avançar = false;
        if (((dfila >= 0) && (dfila < numerofiles)) && ((dcolumn >= 0) && (dcolumn < numerocols))) {
            avançar = true;
        }

        if (avançar) {
            Cuadro cuadrotemp = cuadro[dfila][dcolumn];

            int width = cuadrotemp.getWidth() / 2;
            int height = cuadrotemp.getHeight() / 2;

            if (cuadro[f][c].getMinesProximes() == 0) {
                cuadrotemp.pitjarBoto(true);
                cuadrotemp.setBackground(Color.GREEN);
                if (cuadrotemp.getMinesProximes() != 0) {
                    ImageIcon numeroEscalat = new ImageIcon(arrayNumeros[(cuadrotemp.getMinesProximes()) - 1].getImage().getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT));
                    cuadrotemp.setIcon(numeroEscalat);
                    cuadrotemp.setBackground(Color.GREEN);
                    cuadrotemp.pitjarBoto(true);
                } else {
                    boolean comprovar = false;
                    for (int j = 0; j < check.size(); j++) {
                        if (cuadrotemp == check.get(j)) {
                            comprovar = true;
                        }
                    }
                    if (!comprovar) {
                        check.add(cuadrotemp);
                        cuadrotemp.setBackground(Color.GREEN);
                        cuadrotemp.pitjarBoto(true);
                    }
                }

            }
        }
    }
//Fi de comprovar el voltant

    private void clickBoto(ActionEvent e) {
        Cuadro cuadrotemp = (Cuadro) e.getSource();
        int width = cuadrotemp.getWidth() / 2;
        int height = cuadrotemp.getHeight() / 2;
        ImageIcon image = new ImageIcon(currentPath + "/src/images/mina.png");
        ImageIcon imageEscalada = new ImageIcon(image.getImage().getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT));
        //Comprovar si esta minat
        comprovarCasella(cuadrotemp, imageEscalada);
    }

    //Comprovador si minat
    private void comprovarCasella(Cuadro cuadrotemp, ImageIcon imageEscalada) {
        int width = cuadrotemp.getWidth() / 2;
        int height = cuadrotemp.getHeight() / 2;
        if (cuadrotemp.estatMinat()) {
            for (int f = 0; f < cuadro.length; f++) {
                for (int c = 0; c < cuadro.length; c++) {
                    if (cuadro[f][c].estatMinat()) {
                        cuadro[f][c].setIcon(imageEscalada);
                        cuadro[f][c].setBackground(Color.red);
                    }
                }
            }
            javax.swing.JOptionPane.showMessageDialog(this, "BUM! Has perdut.");
            this.pantalla_joc.removeAll();
        } else {
            //Si te mines devora
            if (cuadrotemp.getMinesProximes() != 0) {
                ImageIcon numeroEscalat = new ImageIcon(arrayNumeros[(cuadrotemp.getMinesProximes()) - 1].getImage().getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT));
                cuadrotemp.setBackground(Color.GREEN);
                cuadrotemp.setIcon(numeroEscalat);
                cuadrotemp.pitjarBoto(true);
            } else {//Si no en te
                cuadrotemp.setBackground(Color.GREEN);
                check.add(cuadrotemp);
                for (int i = 0; i < check.size(); i++) {
                    if (check.get(i).getMinesProximes() == 0) {
                        for (int d = 0; d < direccions.length; d++) {
                            int expfila = check.get(i).getFila();
                            int expcolumna = check.get(i).getColumna();
                            comprovarDireccio(direccions[d], expfila, expcolumna, i);
                        }
                    }
                }
                check.clear();
            }
            p.actualitzarContadorTrobats();
            mirarSiGuany();
        }
    }

    private void mirarSiGuany() {
        if (p.mirarSiGuany()) {
            javax.swing.JOptionPane.showMessageDialog(this, "GG!");
            this.pantalla_joc.removeAll();
        }
    }



    private void establecerFotoNumeros() {
        arrayNumeros[0] = new ImageIcon(currentPath + "/src/images/1.png");
        arrayNumeros[1] = new ImageIcon(currentPath + "/src/images/2.png");
        arrayNumeros[2] = new ImageIcon(currentPath + "/src/images/3.png");
        arrayNumeros[3] = new ImageIcon(currentPath + "/src/images/4.png");
        arrayNumeros[4] = new ImageIcon(currentPath + "/src/images/5.png");
        arrayNumeros[5] = new ImageIcon(currentPath + "/src/images/6.png");
        arrayNumeros[6] = new ImageIcon(currentPath + "/src/images/7.png");
        arrayNumeros[7] = new ImageIcon(currentPath + "/src/images/8.png");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cols;
    private javax.swing.JTextField files;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pantalla_joc;
    // End of variables declaration//GEN-END:variables
}
